
# model to backup a database

log() {
    logfile <%= node[:backup][:log_dir] %>/<%= @backup_name %>.log
}

backup() {
<%
lock_file = node[:imos_backup][:imos_pgsql_lock_file]

@params[:databases].each() do |database|
  database_name     = database['database_name']
  host              = database['host']
  port              = database['port']
  username          = database['username']
  password          = database['password']
%>
<%= "    imos_pgsql #{database_name} #{database_name} #{host} #{port} #{username} #{password} #{lock_file}" %>
<%
end
%>
}

store() {
<% if node[:imos_backup][:s3][:enable] && ! node[:imos_backup][:restore][:allow]
     s3cfg = node[:imos_backup][:s3][:config_file]
     s3path = ::File.join(node[:imos_backup][:s3][:bucket], node[:imos_backup][:s3][:path], node['fqdn'], @backup_name)
     # Keep as many backups as a server would
     backups_to_keep = node[:imos_backup][:server][:backups_to_keep]
%>
    s3 <%= s3path %> --config=<%= s3cfg %>
    s3_cycle <%= s3path %> <%= backups_to_keep %> --config=<%= s3cfg %>
<% else %>
    mv <%= ::File.join(node[:backup][:backup_dir], @backup_name) %>
    cycle <%= ::File.join(node[:backup][:backup_dir], @backup_name) %> <%= node[:backup][:backups_to_keep] %>
<% end %>
}

notify() {
    nagios_status "<%= node[:imos_backup][:status_dir] %>"
}
