# Command definitions
#
# Autogenerated by Chef.

# Host checks
define command {
  # check_tcp, comparing to check_ssh, supplies us with performance data
  # (latency and stuff)
  command_name    check-host-alive
  command_line    $USER1$/check_tcp -e "SSH-2.0" -p 22 -H $HOSTADDRESS$
}

# Service checks
define command {
  command_name    check-nagios
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_nagios -t 20
}

# nrpe remote host checks
define command {
  command_name    check_nrpe_alive
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 20
}

define command {
  command_name    check_nrpe
  command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$ -t 20
}

define command {
  command_name    check_http
  command_line    $USER1$/check_http -f follow -L -H $ARG1$ -p $ARG2$ -u '$ARG3$' $ARG4$
}

define command {
  command_name    check_sql
  command_line    $USER1$/check_sql -s -d $ARG1$ -U $ARG2$ -P $ARG3$ -r -e $ARG4$ -q $ARG5$
}

<%
# Probe DNS server from /etc/resolv.conf
dns_server = %x{ grep '^nameserver ' /etc/resolv.conf | head -1 | cut -d' ' -f2 }
if dns_server.to_s.empty?
  dns_server = node['nagios']['server']['dns_server']
end
%>
define command {
  command_name    check_dig
  command_line    $USER1$/check_dig -H <%= dns_server.chomp %> -T $ARG1$ -l $ARG2$ -a $ARG3$
}

define command {
  command_name    check_portal
  command_line    $USER1$/check_portal -u $ARG1$ -v $ARG2$
}

define command {
  command_name    check_ncwms
  command_line    $USER1$/check_ncwms -t $ARG1$ -u $ARG2$ -w $ARG3$ -c $ARG4$
}

define command {
  command_name    check_geoserver_layer
  command_line    $USER1$/check_geoserver_layer -c $ARG1$ -w $ARG2$ -u $ARG3$ -t $ARG4$ -n $ARG5$ -l $ARG6$ $ARG7$
}

define command {
  command_name    check_nagios_monitors
  command_line    $USER1$/check_nagios_monitors -U $ARG1$ -u $ARG2$ -p $ARG3$ -r $ARG4$
}

# Notification
define command {
  command_name    host-notify-by-email
  command_line    /usr/bin/printf "%b" "$LONGDATETIME$\n\n$HOSTALIAS$ $NOTIFICATIONTYPE$ $HOSTSTATE$\n\n$HOSTOUTPUT$\n\nLogin: ssh://$HOSTNAME$" | <%=node['nagios']['server']['mail_command']%> -s "$NOTIFICATIONTYPE$ - $HOSTALIAS$ $HOSTSTATE$!" $CONTACTEMAIL$
}

define command {
  command_name    host-notify-by-sms-email
  command_line    /usr/bin/printf "%b" "$HOSTALIAS$ $NOTIFICATIONTYPE$ $HOSTSTATE$\n\n$HOSTOUTPUT$" | <%=node['nagios']['server']['mail_command']%> -s "$HOSTALIAS$ $HOSTSTATE$!" $CONTACTPAGER$
}

# 'notify-by-email' command definition
define command {
  command_name    service-notify-by-email
  command_line    /usr/bin/printf "%b" "$LONGDATETIME$ - $SERVICEDESC$ $SERVICESTATE$\n\n$HOSTALIAS$  $NOTIFICATIONTYPE$\n\n$SERVICEOUTPUT$\n\nLogin: ssh://$HOSTNAME$" | <%=node['nagios']['server']['mail_command']%> -s "** $NOTIFICATIONTYPE$ - $HOSTALIAS$ - $SERVICEDESC$ - $SERVICESTATE$" $CONTACTEMAIL$
}

# Commands added through nagios_services data bags
<% @services.each do |service| -%>
<% unless service['use_existing_command'] -%>
define command {
  command_name    check_<%= service['id'] %>
  command_line    <%= service ['command_line'] %>
}
<% end -%>
<% end -%>

<% if !@eventhandlers.empty? -%>
# Event Handlers added through nagios_eventhandlers data bags
<% @eventhandlers.each do |eventhandlers| -%>
define command {
  command_name    <%= eventhandlers['id'] %>
  command_line    <%= eventhandlers['command_line'] %>
}
<% end -%>
<% end -%>
