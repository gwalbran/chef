#!/bin/bash

source <%= @env %> || exit 255

<% if node['imos_po']['data_services']['tmp_dir'] %>
export TMPDIR=<%= node['imos_po']['data_services']['tmp_dir'] %>
<% end %>

# main
# example argument list:
# ACORN file.nc process-file.sh /home/netcdf
# $1 - job name
# $2 - file to run command with
# $3 - command to run
# "$@" - extra parameters for command
main() {
    local job_name=$1; shift
    local file=$1; shift
    local command=$1; shift

    local file_basename=`basename $file`

    if [ ! -f $file ]; then
        # not a file - ignore event
        return 0
    elif [ ${file_basename:0:1} == "." ]; then
        # file is hidden, usually a rsync file in progress
        return 0
    elif lsof $file >& /dev/null; then
        # file is still being accessed
        return 0
    fi

    local tmp_processing_dir=`mktemp -d`
    local tmp_file_to_process="$tmp_processing_dir/"`basename $file`
    chmod 755 $tmp_processing_dir # make directory world readable

    # make file read only before giving it to incoming handlers
    if ! mv -T -n -- $file $tmp_file_to_process; then
        _file_error "Error renaming '$file' -> '$tmp_file_to_process'"
        rmdir $tmp_processing_dir
        return 1
    fi

    if ! sudo chown <%= @user %>:<%= @group %> $tmp_file_to_process; then
        _file_error "Error chown file"
        rmdir $tmp_processing_dir
        return 1
    fi

    if ! chmod 00444 $tmp_file_to_process; then
        _file_error "Error chmod file"
        rmdir $tmp_processing_dir
        return 1
    fi

    # set environment and run command
    declare -r JOB_NAME=$job_name; export JOB_NAME
    declare -r HANDLED_FILE=$tmp_file_to_process; export HANDLED_FILE
    declare -r INCOMING_FILE=$file; export INCOMING_FILE
    declare -r TRANSACTION_ID=`date +%Y%m%d-%H%M%S`; export TRANSACTION_ID
    eval $command $tmp_file_to_process "$@" 2>&1 | log_out

    # make sure file was handled, move to error directory if not
    if [ -f $tmp_file_to_process ]; then
        _file_error "File not handled"
        rmdir $tmp_processing_dir
        return 1
    fi

    rmdir $tmp_processing_dir
}

main "$@"
