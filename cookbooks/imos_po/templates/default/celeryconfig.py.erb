import urllib

<% if @backend == "sqs" %>
<% cred_data_bag = Chef::EncryptedDataBagItem.load("passwords", @password_data_bag) %>
BROKER_URL = 'sqs://{0}:{1}@'.format(
    urllib.quote("<%= cred_data_bag['access_key_id'] %>", safe=''),
    urllib.quote("<%= cred_data_bag['secret_access_key'] %>", safe='')
)
BROKER_TRANSPORT = 'sqs'
<% else # amqp + rabbitmq by default %>
BROKER_URL = 'amqp://'
BROKER_TRANSPORT = 'amqp'
<% end %>

BROKER_TRANSPORT_OPTIONS = {
<% node['imos_po']['data_services']['celeryd']['transport_opts'].each do |k, v| %>
<%= "    '#{k}': #{v}," %>
<% end %>
}

<%
# Create automatic routing for all queues, kindly stolen from:
# http://stackoverflow.com/questions/9167663/celery-per-task-concurrency-limits-of-workers-per-task
celery_routes = {}
watchlists = Chef::Recipe::WatchJobs.get_watches(@watch_dir)
watchlists.each do |job_name, watchlist|
  celery_routes["tasks.#{job_name}"] = { "queue" => job_name }
end
celery_routes["tasks.async_upload"] = { "queue" => "async_upload" }
%>
CELERY_ROUTES = <%= celery_routes.to_json %>
